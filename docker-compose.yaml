version: '3.7'

services:
  # Go application service
  app:
    build:
      context: ./app
    ports:
      - "8080:8080"
    networks:
      - monitoring
    volumes:
      - ./logs:/var/log
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318
      - OTEL_SERVICE_NAME=go-app
      - OTEL_TRACES_SAMPLER=always_on
    depends_on:
      - tempo

  # Prometheus service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert.rules.yml:/etc/prometheus/alert.rules.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - alertmanager

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    networks:
      - monitoring
  
  # k6 Load Testing Service
  k6:
    image: grafana/k6:latest
    command: run /load-test.js
    volumes:
      - ./load-test.js:/load-test.js
    depends_on:
      - app
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - ./logs:/var/log
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
      - app
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - monitoring

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml
    ports:
      - "3200:3200" # Tempo gRPC
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - monitoring

  # Grafana service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Change to your desired password
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge